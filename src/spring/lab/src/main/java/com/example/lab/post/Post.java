package com.example.lab.post;

import com.example.lab.comment.Comment;
import jakarta.persistence.*;

import java.util.List;
import java.util.UUID;

@Entity
public class Post {

    @Id
    @GeneratedValue(strategy = GenerationType.UUID)
    private UUID id;
    private String title;
    private String content;

    // already created by user table so making sure no duplicate columns
    // this is just for accessing the authorId that is created from the user table sql
    // will not be included in SQL INSERT or UPDATE statements generated by Hibernate
    @Column(name = "author_id", insertable = false, updatable = false, nullable = false)
    private UUID authorId;


    @OneToMany(cascade = CascadeType.ALL, orphanRemoval = true)
    @JoinColumn(name = "post_id", nullable = false)
    private List<Comment> comments;

    public Post() {
    }

    public Post(UUID id, String title, String content, UUID authorId) {
        this.id = id;
        this.title = title;
        this.content = content;
        this.authorId = authorId;
    }

    public Post(UUID id, String title, String content) {
        this.id = id;
        this.title = title;
        this.content = content;
    }

    public void setId(UUID id) {
        this.id = id;
    }

    public void setTitle(String title) {
        this.title = title;
    }

    public void setContent(String content) {
        this.content = content;
    }

    public void setAuthorId(UUID authorId) {
        this.authorId = authorId;
    }

    public UUID getId() {
        return this.id;
    }

    public String getTitle() {
        return this.title;
    }

    public String getContent() {
        return this.content;
    }

    public UUID getAuthorId() {
        return this.authorId;
    }

    public List<Comment> getComments() {
        return comments;
    }

    public void setComments(List<Comment> comments) {
        this.comments = comments;
    }

    public void addComment(Comment comments) {
        this.comments.add(comments);
    }

    @Override
    public String toString() {
        return "Post{" +
                "id=" + id +
                ", title='" + title + '\'' +
                ", content='" + content + '\'' +
                ", authorId=" + authorId +
                ", comments=" + comments +
                '}';
    }
}
